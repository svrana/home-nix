#!/bin/sh

# Requires:
# 		blueman
# 		bluez-utils
# 		networkmanager_dmenu (https://github.com/firecat53/networkmanager-dmenu)
# 		btmenu               (https://github.com/cdown/btmenu)

[ "$(cat /sys/class/net/w*/operstate)" = 'down' ] && wifiicon="üì°"
[ -z "${wifiicon+var}" ] && wifiicon=$(grep "^\s*w" /proc/net/wireless | awk '{ print "üì∂", int($3 * 100 / 70) "%" }')

WIFI=$(printf "%s %s" "${wifiicon}" "$(cat /sys/class/net/w*/operstate | sed "s/down/‚ùé/;s/up/üåê/")")

if [ -n "${WIFI}" ]; then
	choice=$(printf 'Bluetooth\nNetwork' | rofi -dmenu -i -p "${WIFI}" -theme-str 'window {width: 25%;}')
else
	choice=$(printf 'Bluetooth\nNetwork' | rofi -dmenu -i -p 'Connect:' -theme-str 'window {width: 25%;}' )
fi

if [ "${choice}" = "Bluetooth" ]; then
	choice2=$(printf 'Connect\nDisconnect\nNew\nManage\nDisable' | rofi -dmenu -i -p 'Bluetooth' -theme-str 'window { width: 25%;}')
	[ "${choice2}" = 'Connect' ] && $BIN_DIR/btmenu
	[ "${choice2}" = 'Disconnect' ] && $BIN_DIR/btmenu -d
	[ "${choice2}" = 'Manage' ] && blueman-manager
	[ "${choice2}" = 'Disable' ] && bluetoothctl power off
	[ "${choice2}" = 'New' ] && blueman-assistant
fi

if [ "${choice}" = "Network" ]; then
	networkmanager_dmenu -theme-str 'window { width: 25%;}'
fi
#vim:ft=sh
